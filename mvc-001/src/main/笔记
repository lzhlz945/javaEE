一、@RequestMapping

    @RequestMapping 的 value、method、params 及 heads
    分别表示请求 URL、请求方法、请求参数及请求头的映射条件，他们之间是与的关系，联合使用多个条件可让请求映射
    更加精确化


二、@PathVariable 映射

   @PathVariable 映射 URL 绑定的占位符
   • 带占位符的 URL 是 Spring3.0 新增的功能，该功能在
   SpringMVC 向 REST 目标挺进发展过程中具有里程碑的
   意义 • 通过 @PathVariable 可以将 URL 中占位符参数绑定到控
   制器处理方法的入参中：URL 中的 {xxx} 占位符可以通过 @PathVariable("xxx") 绑定到操作方法的入参中。

   @RequestMapping(/url/{id})
   public String test(@PathVariable("id") Integer id)

三、
   使用${Path}  web.xml 版本大于2.3

   reset风格  get查询 put跟新 post添加 delete删除

   HiddenHttpMethodFilter 可以将post转化为DELETE 和POST

四、注解Param、Header

   @RequestParam(value = "id",defaultValue = "1",required = false) Integer id

   @RequestHeader(value = "Accept-Language") String id

   +@CookieValue(value = "JSESSIONID") String sessionId


五、POJO

    自定义返回类，可以级联


六、返回的model map ->modelMap  @SessionAttributes

   @SessionAttributes(value = {"user"},types = {String.class})
   map.put("user",user);  value = {"user"}
   map.put("mapAndSession","mapAndSessionTest"); types = {String.class}


七、InternalResourceViewResolver
  • 若项目中使用了 JSTL，则 SpringMVC 会自动把视图由
  InternalResourceView 转为 JstlView
  • 若使用 JSTL 的 fmt 标签则需要在 SpringMVC 的配置文件中配置国际 化资源文件

      <bean class="org.springframework.context.support.ResourceBundleMessageSource" id="messageSource">
          <property name="basename" value="i18n"/>
      </bean>

      <fmt:message key="i18n.password"/>


八、自定义视图
    1、实现View,并加入到spring中
    2、在mvc：xml中：

          <!-- 配置视图  BeanNameViewResolver 解析器: 使用视图的名字来解析视图 -->
          <!-- 通过 order 属性来定义视图解析器的优先级, order 值越小优先级越高 -->
          <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
              <property name="order" value="100"></property>
          </bean>

九、rest风格不建议使用.do和.html

    前端会出现404

      <mvc:default-servlet-handler/>
      <mvc:annotation-driven/>


十、<a></a> 超链接转换成post请求

    1、 <a class="delete" href="/deleteEmps/${emp.id}"></a>
    2、 <form action="" method="POST" >
         <input type="hidden" name="DELETE"/>
        </form>
    3、
      $(function({
         $(".delete").click(function(){
             var href= $(this).attr("href");
             $("form").attr("action",href).submit();

         })


      })





