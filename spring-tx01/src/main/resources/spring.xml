<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <context:component-scan base-package="com.zhang"></context:component-scan>
    <bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource" destroy-method="close">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${user}"/>
        <property name="password" value="${password}"/>
    </bean>

    <!-- JdbcTemplate 对象 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <!--注入 dataSource-->
    <property name="dataSource" ref="dataSource"></property>
</bean>
        <!--事务-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--&lt;!&ndash;开启事务注解&ndash;&gt;
    <tx:annotation-driven transaction-manager="transactionManager"/>-->
    <!--基于xml的事务-->
   <!--1、编写通知(通知就是增强业务代码)-->

    <tx:advice id="myAdvice" transaction-manager="transactionManager">
    <tx:attributes>
    <!--除了上面的方法以外的，其他方法-->
    <tx:method name="*" propagation="REQUIRED" />
    </tx:attributes>
    </tx:advice>
    <!--配置aop-->

    <aop:config>
    <!--指定切入点-->
    <aop:pointcut id="servicePt" expression="execution(* com.zhang.tx.service.impl.AccountServiceImpl.transfer(..))"/>

    <!--配置增强器对象（通知+切入点）-->
    <aop:advisor pointcut-ref="servicePt" advice-ref="myAdvice"/>

    </aop:config>
    <aop:aspectj-autoproxy  proxy-target-class="true"/>
</beans>